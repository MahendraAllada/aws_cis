#!/bin/bash
#5.2 Ensure no security groups allow ingress from 0.0.0.0/0 to remote server administration ports

count=0
if [ "$(aws ec2 describe-security-groups --filters "Name=ip-permission.to-port,Values=22" --query 'SecurityGroups[?length(IpPermissions[?ToPort==`22` && contains(IpRanges[].CidrIp, `0.0.0.0/0`)]) > `0`].{GroupName: GroupName, TagName: Tags[?Key==`Name`].Value | [0]}' | sed -r 's/(\[|\])//g' | sed '/^$/d' | sed  's/ //g' | wc -l)" -eq "0" ] || [ "$( aws ec2 describe-security-groups --filters "Name=ip-permission.to-port,Values=3389" --query 'SecurityGroups[?length(IpPermissions[?ToPort==`3389` && contains(IpRanges[].CidrIp, `0.0.0.0/0`)]) > `0`].{GroupName: GroupName, TagName: Tags[?Key==`Name`].Value | [0]}' | sed -r 's/(\[|\])//g' | sed '/^$/d' | sed  's/ //g' | wc -l)" -eq "0" ]; then
   count=$((count+1))
fi

VARIABLE=$(if [ "$(aws ec2 describe-security-groups --filters "Name=ip-permission.to-port,Values=22" --query 'SecurityGroups[?length(IpPermissions[?ToPort==`22` && contains(IpRanges[].CidrIp, `0.0.0.0/0`)]) > `0`].{GroupName: GroupName, TagName: Tags[?Key==`Name`].Value | [0]}' | sed -r 's/(\[|\])//g' | sed '/^$/d' | sed  's/ //g' | wc -l)" -eq "0" ] || [ "$( aws ec2 describe-security-groups --filters "Name=ip-permission.to-port,Values=3389" --query 'SecurityGroups[?length(IpPermissions[?ToPort==`3389` && contains(IpRanges[].CidrIp, `0.0.0.0/0`)]) > `0`].{GroupName: GroupName, TagName: Tags[?Key==`Name`].Value | [0]}' | sed -r 's/(\[|\])//g' | sed '/^$/d' | sed  's/ //g' | wc -l)" -eq "0" ]; then
GroupName=$(aws ec2 describe-security-groups | jq '.SecurityGroups[].GroupName' | sed 's/"//g')
VPCID=$(aws ec2 describe-vpcs | jq -r '.Vpcs[].VpcId')
  echo "{ \"Group\" : \"$GroupName\", \"VPC\" : \"$VPCID\" }"
fi | tr '\n' ',' | sed 's/,$//')

if [ "$count" -eq "0" ]; then
echo "{ \"securitygrping\" : \"\" }"
else
echo "{ \"securitygrping\" : [ $VARIABLE ] }"
fi
